# Obfuscated with PyObfuscate
# https://www.github.com/Syafii-XD
# Mau Ngapain Ngab, Mau Record Ya!!
# Author : MUHAMMAD SYAFII, FIKRI SINAGA
# Facebook: https://www.facebook.com/Fikri.sinaga
# Time : Sun Jun 26 02:09:07 2022
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b''))
