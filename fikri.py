# Obfuscated with PyObfuscate
# https://www.github.com/Syafii-XD
# MAU NGAPAIN NGAB !!
# Time : Sun Jun 26 02:51:15 2022
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'=='))