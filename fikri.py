# Obfuscated with PyObfuscate
# https://www.github.com/Syafii-XD
# MAU NGAPAIN NGAB, MAU RECODE YA!!
# Time : Sun Jun 26 01:40:57 2022
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b''))